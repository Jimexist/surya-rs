name: Build

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup OpenCV for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libopencv-dev clang libclang-dev

      - name: Setup OpenCV for Windows
        if: matrix.os == 'windows-latest'
        run: choco install opencv

      - name: Setup OpenCV for macOS
        if: matrix.os == 'macos-latest'
        run: brew install opencv

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run check
        if: matrix.os != 'macos-latest'
        run: cargo check --features=cli --bins

      - name: Run check with Metal
        if: matrix.os == 'macos-latest'
        run: cargo check --features=cli,metal --bins

      - name: Run fmt check
        if: matrix.os == 'ubuntu-latest'
        run: cargo fmt --all --check

      - name: Run clippy
        if: matrix.os == 'ubuntu-latest'
        run: cargo clippy --features=cli --bins

      - name: Run unit tests
        if: matrix.os == 'ubuntu-latest'
        run: cargo test --features=cli --bins

      - name: Test run surya
        run: cargo run --features=cli --bin surya -- --help
