name: Build

on:
  push:
    branches:
      - main
  pull_request:

env:
  OPENCV_VERSION: "4.9.0"

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: surya-rs/surya:latest

  build-windows:
    runs-on: windows-latest
    env:
      OPENCV_LINK_LIBS: "opencv_world490"
      OPENCV_LINK_PATHS: "C:/tools/opencv/build/x64/vc16/lib,C:/tools/opencv/build/x64/vc15/lib"
      OPENCV_INCLUDE_PATHS: "C:/tools/opencv/build/include"
    steps:
      - uses: actions/checkout@v4

      - name: Setup OpenCV and LLVM
        run: choco install opencv llvm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run check on Windows
        run: cargo check --features=cli --bins

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup OpenCV and LLVM
        run: brew install opencv llvm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run check on macOS
        run: |
          echo "setting DYLD_FALLBACK_LIBRARY_PATH to $(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/lib/"
          export DYLD_FALLBACK_LIBRARY_PATH="$(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/lib/"
          cargo check --features=cli,metal --bins

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup OpenCV for Ubuntu
        run: sudo apt install -y libopencv-dev clang libclang-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run check on Ubuntu
        run: cargo check --features=cli --bin surya

      - name: Run fmt check
        run: cargo fmt --all --check

      - name: Run clippy
        run: cargo clippy --features=cli --bin surya --lib

      - name: Run unit tests
        run: cargo test --features=cli --bin surya --lib

      - name: Test run surya
        run: cargo run --features=cli --bin surya -- --help
